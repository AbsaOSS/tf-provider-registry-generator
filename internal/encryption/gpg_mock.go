// Code generated by MockGen. DO NOT EDIT.
// Source: internal/encryption/gpg.go

// Package encryption is a generated GoMock package.
package encryption

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/k0da/tfreg-golang/internal/types"
)

// MockIEncryption is a mock of IEncryption interface.
type MockIEncryption struct {
	ctrl     *gomock.Controller
	recorder *MockIEncryptionMockRecorder
}

// MockIEncryptionMockRecorder is the mock recorder for MockIEncryption.
type MockIEncryptionMockRecorder struct {
	mock *MockIEncryption
}

// NewMockIEncryption creates a new mock instance.
func NewMockIEncryption(ctrl *gomock.Controller) *MockIEncryption {
	mock := &MockIEncryption{ctrl: ctrl}
	mock.recorder = &MockIEncryptionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIEncryption) EXPECT() *MockIEncryptionMockRecorder {
	return m.recorder
}

// ExtractPublicKey mocks base method.
func (m *MockIEncryption) ExtractPublicKey() (*types.GPGPublicKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtractPublicKey")
	ret0, _ := ret[0].(*types.GPGPublicKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractPublicKey indicates an expected call of ExtractPublicKey.
func (mr *MockIEncryptionMockRecorder) ExtractPublicKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractPublicKey", reflect.TypeOf((*MockIEncryption)(nil).ExtractPublicKey))
}
