// Code generated by MockGen. DO NOT EDIT.
// Source: internal/storage/storage.go

// Package storage is a generated GoMock package.
package storage

import (
	reflect "reflect"

	types "github.com/AbsaOSS/tf-provider-registry-generator/internal/types"
	gomock "github.com/golang/mock/gomock"
)

// MockIStorage is a mock of IStorage interface.
type MockIStorage struct {
	ctrl     *gomock.Controller
	recorder *MockIStorageMockRecorder
}

// MockIStorageMockRecorder is the mock recorder for MockIStorage.
type MockIStorageMockRecorder struct {
	mock *MockIStorage
}

// NewMockIStorage creates a new mock instance.
func NewMockIStorage(ctrl *gomock.Controller) *MockIStorage {
	mock := &MockIStorage{ctrl: ctrl}
	mock.recorder = &MockIStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStorage) EXPECT() *MockIStorageMockRecorder {
	return m.recorder
}

// GetVersions mocks base method.
func (m *MockIStorage) GetVersions() (types.Versions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVersions")
	ret0, _ := ret[0].(types.Versions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVersions indicates an expected call of GetVersions.
func (mr *MockIStorageMockRecorder) GetVersions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVersions", reflect.TypeOf((*MockIStorage)(nil).GetVersions))
}

// WritePlatformMetadata mocks base method.
func (m *MockIStorage) WritePlatformMetadata(download []types.Download) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WritePlatformMetadata", download)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WritePlatformMetadata indicates an expected call of WritePlatformMetadata.
func (mr *MockIStorageMockRecorder) WritePlatformMetadata(download interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WritePlatformMetadata", reflect.TypeOf((*MockIStorage)(nil).WritePlatformMetadata), download)
}

// WriteVersions mocks base method.
func (m *MockIStorage) WriteVersions(v types.Versions) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteVersions", v)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteVersions indicates an expected call of WriteVersions.
func (mr *MockIStorageMockRecorder) WriteVersions(v interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteVersions", reflect.TypeOf((*MockIStorage)(nil).WriteVersions), v)
}
